"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5935],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>g});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var l=r.createContext({}),c=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},p=function(t){var e=c(t.components);return r.createElement(l.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,l=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),d=c(n),g=a,f=d["".concat(l,".").concat(g)]||d[g]||u[g]||o;return n?r.createElement(f,i(i({ref:e},p),{},{components:n})):r.createElement(f,i({ref:e},p))}));function g(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s.mdxType="string"==typeof t?t:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4696:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:1,title:"First steps"},i=void 0,s={unversionedId:"getting-started/basic/intro",id:"getting-started/basic/intro",title:"First steps",description:"In the following tutorial, we are going to go over a standard classy example, covering Token Classification, specifically",source:"@site/docs/getting-started/basic/intro.md",sourceDirName:"getting-started/basic",slug:"/getting-started/basic/intro",permalink:"/classy/docs/getting-started/basic/intro",draft:!1,editUrl:"https://github.com/sunglasses-ai/classy/edit/main/docs/docs/getting-started/basic/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"First steps"},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/classy/docs/installation"},next:{title:"Organizing your data",permalink:"/classy/docs/getting-started/basic/data-formatting"}},l={},c=[{value:"The Task",id:"the-task",level:2}],p={toc:c};function u(t){let{components:e,...n}=t;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In the following tutorial, we are going to go over a standard ",(0,a.kt)("inlineCode",{parentName:"p"},"classy")," example, covering ",(0,a.kt)("strong",{parentName:"p"},"Token Classification"),", specifically\n",(0,a.kt)("em",{parentName:"p"},"Named Entity Recognition"),", and you are going to learn the basics of how to use ",(0,a.kt)("inlineCode",{parentName:"p"},"classy")," without (potentially) writing a single line of code."),(0,a.kt)("h2",{id:"the-task"},"The Task"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Named Entity Recognition")," is the task of identifying Named Entities in a text linking them to a predefined\nset of classes, e.g., ",(0,a.kt)("strong",{parentName:"p"},"ORG")," (organization), ",(0,a.kt)("strong",{parentName:"p"},"LOC")," (location), ",(0,a.kt)("strong",{parentName:"p"},"PER")," (person) and ",(0,a.kt)("strong",{parentName:"p"},"O")," (other) for non-entities.\nFor instance, consider what will be our running example for this whole tutorial:"),(0,a.kt)("table",null,(0,a.kt)("tr",{style:{textAlign:"center"}},(0,a.kt)("td",null,"Barack"),(0,a.kt)("td",null,"Obama"),(0,a.kt)("td",null,"visited"),(0,a.kt)("td",null,"Google"),(0,a.kt)("td",null,"in"),(0,a.kt)("td",null,"California")),(0,a.kt)("tr",{style:{textAlign:"center"}},(0,a.kt)("td",null,"PER"),(0,a.kt)("td",null,"PER"),(0,a.kt)("td",null,"O"),(0,a.kt)("td",null,"ORG"),(0,a.kt)("td",null,"O"),(0,a.kt)("td",null,"LOC"))),(0,a.kt)("p",null,"Our goal is to train a classification model that, given a sequence of tokens as input,\noutputs a sequence of Named Entity tags corresponding to each token in the sequence."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The contents of this tutorial focus on the task of ",(0,a.kt)("em",{parentName:"p"},"Token Classification"),", but the general ideas and code structure are\nvery similar for other tasks as well (you can check them out ",(0,a.kt)("a",{parentName:"p",href:"/docs/reference-manual/tasks-and-formats"},"in the documentation"),").")))}u.isMDXComponent=!0}}]);