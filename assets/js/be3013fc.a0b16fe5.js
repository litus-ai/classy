"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4442],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=l(n),b=o,m=f["".concat(s,".").concat(b)]||f[b]||u[b]||a;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2725:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={id:"token-batch-size",title:"Token Batch Size",hoverText:"The (approximate) number of tokens (or BPEs) that can be in a batch."},i=void 0,c={unversionedId:"glossary/token-batch-size",id:"glossary/token-batch-size",title:"Token Batch Size",description:"Term explanation",source:"@site/docs/glossary/token-batch-size.md",sourceDirName:"glossary",slug:"/glossary/token-batch-size",permalink:"/classy/docs/glossary/token-batch-size",draft:!1,editUrl:"https://github.com/sunglasses-ai/classy/edit/main/docs/docs/glossary/token-batch-size.md",tags:[],version:"current",frontMatter:{id:"token-batch-size",title:"Token Batch Size",hoverText:"The (approximate) number of tokens (or BPEs) that can be in a batch."}},s={},l=[{value:"Term explanation",id:"term-explanation",level:3}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"term-explanation"},"Term explanation"),(0,o.kt)("p",null,"Token batching is a custom batching technique that relies on counting the number of input elements in a batch and\nconstrains them in order to have batches that don't overflow the available VRAM. For example, if our ",(0,o.kt)("inlineCode",{parentName:"p"},"token batch size"),"\nwere set at 1000, a batch of size (100, 10) would be acceptable, as well as one of size (20, 50), but not (50, 50) (as ",(0,o.kt)("inlineCode",{parentName:"p"},"50 x 50 = 2500"),")."))}u.isMDXComponent=!0}}]);